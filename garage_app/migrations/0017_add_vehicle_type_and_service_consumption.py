# Generated by Django 5.2.5 on 2025-08-17 14:51

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('garage_app', '0016_add_stock_alert_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nom du type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('nhtsa_body_classes', models.JSONField(blank=True, default=list, help_text="Liste des 'Body Class' de l'API NHTSA correspondant à ce type", verbose_name='Classes de carrosserie NHTSA')),
                ('is_active', models.BooleanField(default=True, verbose_name='Type actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Type de véhicule',
                'verbose_name_plural': 'Types de véhicules',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='auto_identified_type',
            field=models.BooleanField(default=False, verbose_name='Type identifié automatiquement'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='garage_app.vehicletype', verbose_name='Type de véhicule'),
        ),
        migrations.CreateModel(
            name='ServiceConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption_rate', models.DecimalField(decimal_places=4, help_text="Quantité consommée par service (ex: 0.20 pour 20% d'un rouleau)", max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.0001')), django.core.validators.MaxValueValidator(Decimal('10.0000'))], verbose_name='Taux de consommation')),
                ('unit', models.CharField(choices=[('percentage', 'Pourcentage du rouleau'), ('meters', 'Mètres'), ('pieces', 'Pièces'), ('liters', 'Litres'), ('other', 'Autre')], default='percentage', max_length=20, verbose_name='Unité de mesure')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('is_active', models.BooleanField(default=True, verbose_name='Règle active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumption_rules', to='garage_app.inventoryitem', verbose_name="Article d'inventaire")),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumption_rules', to='garage_app.service', verbose_name='Service')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumption_rules', to='garage_app.vehicletype', verbose_name='Type de véhicule')),
            ],
            options={
                'verbose_name': 'Règle de consommation',
                'verbose_name_plural': 'Règles de consommation',
                'ordering': ['service__name', 'vehicle_type__name'],
                'unique_together': {('service', 'vehicle_type', 'inventory_item')},
            },
        ),
    ]
