# Generated by Django 5.2.5 on 2025-08-15 09:25

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('garage_app', '0004_add_archiving_system'),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du fournisseur')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True, verbose_name='Personne contact')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Site web')),
                ('account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Numéro de compte')),
                ('payment_terms', models.CharField(blank=True, max_length=100, null=True, verbose_name='Conditions de paiement')),
                ('category', models.CharField(choices=[('materials', 'Matériaux'), ('tools', 'Outils'), ('services', 'Services'), ('utilities', 'Services publics'), ('professional', 'Services professionnels'), ('other', 'Autre')], default='other', max_length=20, verbose_name='Catégorie')),
                ('is_active', models.BooleanField(default=True, verbose_name='Fournisseur actif')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fournisseur',
                'verbose_name_plural': 'Fournisseurs',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='inventory_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='garage_app.inventoryitem', verbose_name="Article d'inventaire"),
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='item_type',
            field=models.CharField(choices=[('service', 'Service'), ('inventory', "Article d'inventaire")], default='service', max_length=20, verbose_name="Type d'élément"),
        ),
        migrations.AlterField(
            model_name='invoiceitem',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='garage_app.service', verbose_name='Service'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('start_datetime', models.DateTimeField(verbose_name='Date et heure de début')),
                ('end_datetime', models.DateTimeField(verbose_name='Date et heure de fin')),
                ('status', models.CharField(choices=[('scheduled', 'Planifié'), ('confirmed', 'Confirmé'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('cancelled', 'Annulé'), ('no_show', 'Absence')], default='scheduled', max_length=20, verbose_name='Statut')),
                ('estimated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Prix estimé')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='garage_app.client', verbose_name='Client')),
                ('estimated_services', models.ManyToManyField(blank=True, related_name='appointments', to='garage_app.service', verbose_name='Services estimés')),
                ('invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment', to='garage_app.invoice', verbose_name='Facture')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='garage_app.vehicle', verbose_name='Véhicule')),
            ],
            options={
                'verbose_name': 'Rendez-vous',
                'verbose_name_plural': 'Rendez-vous',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='RecurringExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la dépense récurrente')),
                ('description', models.CharField(max_length=200, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant')),
                ('category', models.CharField(choices=[('materials', 'Matériaux'), ('tools', 'Outils'), ('rent', 'Loyer'), ('utilities', 'Services publics'), ('insurance', 'Assurance'), ('marketing', 'Marketing'), ('fuel', 'Carburant'), ('maintenance', 'Entretien'), ('office', 'Fournitures de bureau'), ('professional', 'Services professionnels'), ('other', 'Autre')], default='other', max_length=20, verbose_name='Catégorie')),
                ('frequency', models.CharField(choices=[('daily', 'Quotidienne'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuelle'), ('quarterly', 'Trimestrielle'), ('yearly', 'Annuelle')], default='monthly', max_length=20, verbose_name='Fréquence')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin (optionnelle)')),
                ('next_due_date', models.DateField(verbose_name='Prochaine échéance')),
                ('gst_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='TPS')),
                ('qst_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='TVQ')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recurring_expenses', to='garage_app.supplier', verbose_name='Fournisseur')),
            ],
            options={
                'verbose_name': 'Dépense récurrente',
                'verbose_name_plural': 'Dépenses récurrentes',
                'ordering': ['next_due_date', 'name'],
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='garage_app.supplier', verbose_name='Fournisseur'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='garage_app.supplier', verbose_name='Fournisseur'),
        ),
    ]
