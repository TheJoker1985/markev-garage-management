# Generated by Django 5.2.5 on 2025-08-13 20:11

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom de famille')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'entreprise")),
                ('address', models.TextField(verbose_name='Adresse complète')),
                ('phone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Site web')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Logo')),
                ('gst_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Numéro TPS')),
                ('qst_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Numéro TVQ')),
                ('is_tax_registered', models.BooleanField(default=False, verbose_name='Inscrit aux taxes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': "Profil d'entreprise",
                'verbose_name_plural': "Profils d'entreprise",
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant')),
                ('expense_date', models.DateField(verbose_name='Date de dépense')),
                ('category', models.CharField(choices=[('materials', 'Matériaux'), ('tools', 'Outils'), ('rent', 'Loyer'), ('utilities', 'Services publics'), ('insurance', 'Assurance'), ('marketing', 'Marketing'), ('fuel', 'Carburant'), ('maintenance', 'Entretien'), ('office', 'Fournitures de bureau'), ('professional', 'Services professionnels'), ('other', 'Autre')], default='other', max_length=20, verbose_name='Catégorie')),
                ('gst_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='TPS payée')),
                ('qst_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='TVQ payée')),
                ('receipt', models.FileField(blank=True, null=True, upload_to='receipts/', verbose_name='Reçu')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dépense',
                'verbose_name_plural': 'Dépenses',
                'ordering': ['-expense_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'article")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('sku', models.CharField(max_length=50, unique=True, verbose_name='Code SKU')),
                ('quantity_in_stock', models.IntegerField(default=0, verbose_name='Quantité en stock')),
                ('minimum_stock_level', models.IntegerField(default=0, verbose_name='Niveau de stock minimum')),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Coût unitaire')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Prix de vente unitaire')),
                ('category', models.CharField(choices=[('materials', 'Matériaux'), ('tools', 'Outils'), ('supplies', 'Fournitures'), ('chemicals', 'Produits chimiques'), ('other', 'Autre')], default='other', max_length=20, verbose_name='Catégorie')),
                ('is_active', models.BooleanField(default=True, verbose_name='Article actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': "Article d'inventaire",
                'verbose_name_plural': "Articles d'inventaire",
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du service')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('default_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Prix par défaut')),
                ('category', models.CharField(choices=[('tinting', 'Vitres teintées'), ('ppf', 'Protection pare-pierre (PPF)'), ('wrapping', 'Wrapping'), ('hydrophobic', 'Protection hydrophobe'), ('detailing', 'Esthétique (compound, polissage)'), ('other', 'Autre')], default='other', max_length=20, verbose_name='Catégorie')),
                ('is_active', models.BooleanField(default=True, verbose_name='Service actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=20, unique=True, verbose_name='Numéro de facture')),
                ('invoice_date', models.DateField(verbose_name='Date de facture')),
                ('due_date', models.DateField(verbose_name="Date d'échéance")),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Sous-total')),
                ('gst_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Montant TPS')),
                ('qst_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Montant TVQ')),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Montant total')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyée'), ('paid', 'Payée'), ('overdue', 'En retard'), ('cancelled', 'Annulée')], default='draft', max_length=20, verbose_name='Statut')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='garage_app.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Facture',
                'verbose_name_plural': 'Factures',
                'ordering': ['-invoice_date', '-invoice_number'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant')),
                ('payment_date', models.DateField(verbose_name='Date de paiement')),
                ('payment_method', models.CharField(choices=[('cash', 'Comptant'), ('check', 'Chèque'), ('credit_card', 'Carte de crédit'), ('debit_card', 'Carte de débit'), ('bank_transfer', 'Virement bancaire'), ('other', 'Autre')], default='cash', max_length=20, verbose_name='Méthode de paiement')),
                ('reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='Référence')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='garage_app.invoice', verbose_name='Facture')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description personnalisée')),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantité')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Prix unitaire')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_items', to='garage_app.invoice', verbose_name='Facture')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='garage_app.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Élément de facture',
                'verbose_name_plural': 'Éléments de facture',
                'ordering': ['invoice', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=50, verbose_name='Marque')),
                ('model', models.CharField(max_length=50, verbose_name='Modèle')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2030)], verbose_name='Année')),
                ('color', models.CharField(blank=True, max_length=30, null=True, verbose_name='Couleur')),
                ('license_plate', models.CharField(blank=True, max_length=20, null=True, verbose_name="Plaque d'immatriculation")),
                ('vin', models.CharField(blank=True, max_length=17, null=True, verbose_name='Numéro VIN')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='garage_app.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Véhicule',
                'verbose_name_plural': 'Véhicules',
                'ordering': ['client__last_name', 'make', 'model'],
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='garage_app.vehicle', verbose_name='Véhicule'),
        ),
    ]
